# Задача № 6: Реализовать два небольших скрипта:
#             итератор, генерирующий целые числа, начиная с указанного;
#             итератор, повторяющий элементы некоторого списка, определённого заранее.
#             Подсказка: используйте функцию count() и cycle() модуля itertools.
#                        Обратите внимание, что создаваемый цикл не должен быть бесконечным.
#                        Предусмотрите условие его завершения.
#             Например, в первом задании выводим целые числа, начиная с 3. При достижении числа 10 — завершаем цикл.
#             Вторым пунктом необходимо предусмотреть условие, при котором повторение элементов списка прекратится.
# Решение:

# из встроенной библиотеке itertools импортируем в нашу программу функцию count
# итератор - это объект, который возвращает свои элементы по одному за раз
# функция count cоздаёт последовательный итератор c шагом +1 (по умолчанию)
# функция cycle cоздаёт итератор с повторяемым значением
from itertools import count, cycle

print('Итератор, генерирующий целые числа, начиная с указанного!')

num_iter = int(input('Введите, пожалуйста, целое число с которого начнется последовательность: '))

count_1 = 0
for i in count(num_iter):
    count_1 += 1
    # аргумент end у функции print по умолчанию = перевод каретки (нажатие Enter/перевод на новую строку)
    # изменяем это значение на ПРОБЕЛ
    print(i, end=' ')

    # базовый случай, когда счетчик достигнет значения 10, то цикл for принудительно прервется оператором break
    # без этого условия цикл будет бесконечным
    if (count_1 == 10):
        break

print()
print()

print('Итератор, повторяющий элементы некоторого списка!')

my_list = ['Первый', 'Второй', 'Третий']

# счетчик для прерывания цикла for
count_2 = 0
for i in cycle(my_list):
    count_2 += 1
    print(i, end=' ')

    # базовый случай, когда i достигнет значения 10, то цикл for принудительно прервется оператором break
    # примечание: каждый элемент списка прибавляет к счетчику +1
    # без этого условия цикл будет бесконечным
    if (count_2 == 10):
        break
