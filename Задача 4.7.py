# Задача № 7: Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
#             При вызове функции должен создаваться объект-генератор.
#             Функция вызывается следующим образом: for el in fact(n).
#             Она отвечает за получение факториала числа.
#             В цикле нужно выводить только первые n чисел, начиная с 1! и до n!.
#             Подсказка: факториал числа n — произведение чисел от 1 до n.
#                        Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.
# Решение:

# из встроенной библиотеке math импортируем в нашу программу функцию factorial
# функция factorial вычисляет факториал заданного значения
# факториал 4: 1 * 2 * 3 * 4 = 24
from math import factorial


def fact(n):
    for i in range(n):
        print(i, end='! = ')

        # примечание: встроенная функция factorial находит факториал числа в скобках
        yield factorial(i)


fib = int(input('Введите, пожалуйста, целое число, до которого необходимо найти факториалы: '))

# каждый цикл for вызывает функцию fact, где аргументом передается значение по-порядку
# из диапазона: от 0 до введенного значения + 1 (чтобы введенное значение включалось)
# как только вызывается функция, в ней запускается цикл for, который выводит текущее число, у которого находят факториал
# ключевое слово yield это примерно тоже самое, что и return
# yield возвращает значение, которое распечатывается
# так будет повторятся столько итераций, сколько ввел пользователь
for el in fact(fib + 1):
    print(el)
